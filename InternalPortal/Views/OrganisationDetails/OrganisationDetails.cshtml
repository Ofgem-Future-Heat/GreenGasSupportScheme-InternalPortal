@model InternalPortal.ViewModels.OrganisationDetails

@{
    ViewData["Title"] = "Organisation Details";

    var organisationType = Model.OrganisationType == "Private" ? "Private limited company" : "Other type of organisation";
}

<a href="/" class="govuk-back-link">Back</a>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl"> @Model.OrganisationName </h1>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h2 class="govuk-heading-l">Organisation information</h2>
        <dl class="govuk-summary-list govuk-!-margin-bottom-9">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Organisation type
                </dt>
                <dd class="govuk-summary-list__value">
                    @organisationType
                </dd>
            </div>
            @{
                if (Model.OrganisationType == "Private")
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Company registration number
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.OrganisationRegistrationNumber
                        </dd>
                    </div>
                }
            }
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Organisation name
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.OrganisationName
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Organisation address
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.Raw(Model.GetFormattedAddress())
                </dd>
            </div>
            @{
                if (Model.OrganisationType != "Private")
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Legal document
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @{
                                await Html.RenderPartialAsync("Components/UploadFileDetails",
                                    new ViewDataDictionary(ViewData)
                                    {
                                        { "Id", Model.LegalDocument?.FileId },
                                        { "Name", Model.LegalDocument?.FileName },
                                        { "Size", Model.LegalDocument?.FileSizeAsString }
                                    }
                                    );
                            }
                        </dd>
                    </div>
                }
            }

            <br/>

            <h2 class="govuk-heading-m">Authorised signatory details</h2>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Authorised signatory name
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.ResponsiblePersonName
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Authorised signatory phone number
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.ResponsiblePersonPhoneNumber
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Authorised signatory email
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.ResponsiblePersonEmail
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Photographic identification
                </dt>
                <dd class="govuk-summary-list__value">
                    @{
                        await Html.RenderPartialAsync("Components/UploadFileDetails",
                            new ViewDataDictionary(ViewData)
                            {
                                { "Id", Model.PhotoId?.FileId },
                                { "Name", Model.PhotoId?.FileName },
                                { "Size", Model.PhotoId?.FileSizeAsString }
                            }
                            );
                    }
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Council tax or utility bill
                </dt>
                <dd class="govuk-summary-list__value">
                    @{
                        await Html.RenderPartialAsync("Components/UploadFileDetails",
                            new ViewDataDictionary(ViewData)
                            {
                                { "Id", Model.ProofOfAddress?.FileId },
                                { "Name", Model.ProofOfAddress?.FileName },
                                { "Size", Model.ProofOfAddress?.FileSizeAsString }
                            }
                            );
                    }
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Letter of authorisation
                </dt>
                <dd class="govuk-summary-list__value">
                    @{
                        await Html.RenderPartialAsync("Components/UploadFileDetails",
                            new ViewDataDictionary(ViewData)
                            {
                                { "Id", Model.LetterOfAuthority?.FileId },
                                { "Name", Model.LetterOfAuthority?.FileName },
                                { "Size", Model.LetterOfAuthority?.FileSizeAsString }
                            }
                            );
                    }
                </dd>
            </div>
        </dl>
        @using (Html.BeginForm(FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="govuk-form-group">
                <label class="govuk-label" for="sort">
                    Is this organisation verified?
                </label>
                <select class="govuk-select" id="organisationStatus" name="organisationStatus">
                    <option value="Not Verified">No</option>
                    <option value="Verified" selected="@Model.OrganisationStatus.Equals("Verified")">Yes</option>
                </select>
            </div>
            <br/>
            <button class="govuk-button" data-module="govuk-button">
                Save and continue
            </button>
        }
    </div>
</div>
